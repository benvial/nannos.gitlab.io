
image: benvial/nannos:latest

stages:
  - doc

variables:
  TERM: "xterm"
  DISPLAY: ":99.0"
  PYVISTA_OFF_SCREEN: "true"


before_script:
  ## install os tools
  - apt-get update -q && apt-get install -q -y --no-install-recommends wget unzip fontconfig libfontconfig make libgl1-mesa-dev xvfb
  ## setup ssh
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - git config --global user.name "${GITLAB_USER_NAME}"
  - git config --global user.email "${GITLAB_USER_EMAIL}"
  - gitlab_hostname=$(echo "${CI_REPOSITORY_URL}" | sed -e 's|https\?://gitlab-ci-token:.*@||g' | sed -e 's|/.*||g')
  - ssh-keyscan "${gitlab_hostname}" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  ## clone main nannos repository
  - git clone --depth 1 https://gitlab.com/nannos/nannos.git
  ## install python package
  - cd nannos
  - mamba install nodejs
  - python -V  # Print out python version for debugging
  - which Xvfb
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - sleep 3
  ## install fonts
  - cd doc/binder/ && bash postBuild ../_assets

pages:
  stage: doc
  script:
    # Install python package
    - make install
    - make doc-req
    # Kaggle benchmark
    - cd examples/benchmarks/kaggle && make -s pull && make -s dld && ls -a nannos_cpu && ls -a nannos_gpu && cd ../../..
    # Build documentation html
    - mkdir -p ${HOME}/.config/matplotlib
    - cp doc/_custom/nannos.mplstyle matplotlibrc && mv matplotlibrc ${HOME}/.config/matplotlib/
    - make doc
    - cd doc
    # Build documentation pdf
    - cd texlive && chmod +x texlive_install.sh && ./texlive_install.sh && cd ..
    - export PATH=/root/texlive/bin/x86_64-linux:$PATH && make latex && cd _build/latex && texliveonfly -c xelatex nannos.tex
    - cd ../..
    - make latex && make pdf && cd ..
    - mv doc/_build/latex/nannos.pdf doc/_build/html/_downloads/
    - cp -r doc/_build/html/ ../public/
    - cd ..
    # In the doc branch, make a clean repository for binder
    - git branch doc
    - git checkout doc
    - rm -rf .gitlab-ci.yml README.rst Makefile
    - cp -r nannos/doc/_build/html/notebooks/ notebooks/
    - cp -r nannos/environment.yml .
    - cp -r nannos/doc/binder/* .
    - cp -r nannos/doc/_assets/*.zip .
    - mkdir -p .jupyter/custom
    - cp nannos/doc/_custom/static/css/custom_notebook.css .jupyter/custom/custom.css
    - mkdir -p .config/matplotlib
    - cp nannos/doc/_custom/nannos.mplstyle matplotlibrc && mv matplotlibrc .config/matplotlib/
    - rm -rf nannos
    - git add .
    - git commit -m "Built documentation from $CI_COMMIT_SHORT_SHA [skip ci]" || echo "No changes, nothing to commit!"
    - url_host=$(echo "${CI_REPOSITORY_URL}" | sed -e 's|https\?://gitlab-ci-token:.*@|ssh://git@|g')
    - git remote set-url --push origin "${url_host}"
    - git push origin HEAD:doc --force
  artifacts:
    paths:
      - public
  only:
    - master
